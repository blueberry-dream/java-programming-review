/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package _arrays;

import java.util.Arrays;
import java.util.Comparator;

public class App {
    public static void main(String[] args) {

        // init arrays
        int[] ages;
        ages = new int[6];

        // initialized to 0
        Print(Arrays.toString(ages));

        // initialized to false
        boolean[] canFly = new boolean[6];
        Print(Arrays.toString(canFly));

        // initialized to null character \u0000
        char[] letters = new char[5];
        Print(Arrays.toString(letters));

        // default values for empty arrays
        Integer[] ages2;
        // PrintArr(ages2); // will throw an error
        // initialized with null
        ages2 = new Integer[3];
        PrintArr(ages2);

        int[] years = new int[] { 2021, 2022, 2023 };
        int[] months = { 1, 2, 3, 4, 5 };

        // array properties
        Print(years.length);

        // indexing errors
        // int aYear = years[-1];
        // int aYear = years[4];

        // iterate over an array
        for(int i = 0 ; i < years.length; i ++) {
            Print(String.format("Element at %s: %s", i, years[i]));
        }

        // iterate with for-each loop
        for(int x:years) {
            Print(String.format("Current element is %s", x));
        }


        // multidim arrays
        int[][] matrix = {
            {1,2,3,4},
            {5,6,7,8}
        };

        for(int i = 0; i < matrix.length; i++ ){
            for(int j = 0; j < matrix[i].length; j++ ) {
                Print(String.format("(%1s, %2s): %3s", i, j, matrix[i][j]));

            }
        }

        for(int[] row: matrix) {
            for(int el: row) {
                Print(String.format("%1s: %2s", Arrays.toString(row), el));
            }
        }

        // builtin array methods
        // custom comparator ?
        // Arrays.sort(years, Comparator.comparingInt(a ->)  );
    }


    private static <T> void PrintArr(T[] arr) {
        Print(Arrays.toString(arr));
    }

    private static void Print(Object obj) {
        System.out.println(obj);
    }
}
